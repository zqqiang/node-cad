// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Select3D_SensitivePoly_HeaderFile
#define _Select3D_SensitivePoly_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_Select3D_SensitivePoly.hxx>

#include <Select3D_Box2d.hxx>
#include <Select3D_PointData.hxx>
#include <Select3D_SensitiveEntity.hxx>
#include <Handle_SelectBasics_EntityOwner.hxx>
#include <Handle_TColgp_HArray1OfPnt.hxx>
#include <Standard_Integer.hxx>
#include <Handle_Select3D_Projector.hxx>
class Standard_ConstructionError;
class Standard_OutOfRange;
class SelectBasics_EntityOwner;
class TColgp_Array1OfPnt;
class TColgp_HArray1OfPnt;
class Select3D_Projector;
class SelectBasics_ListOfBox2d;
class TColgp_Array1OfPnt2d;


//! Sensitive Entity to make a face selectable.
//! In some cases this class can raise Standard_ConstructionError and
//! Standard_OutOfRange exceptions from its member Select3D_PointData
//! mypolyg.
class Select3D_SensitivePoly : public Select3D_SensitiveEntity
{

public:

  
  //! projection of the sensitive primitive in order to
  //! get 2D boxes for the Sort Algorithm
  Standard_EXPORT virtual   void Project (const Handle(Select3D_Projector)& aProjector) ;
  
  //! stores in <boxes> the 2D Boxes which represent the sensitive face
  //! in the selection algorithm.
  Standard_EXPORT   void Areas (SelectBasics_ListOfBox2d& boxes) ;
  
  //! Returns the 3D points of the array used at construction time.
      void Points3D (Handle(TColgp_HArray1OfPnt)& theHArrayOfPnt) ;
  
  //! Returns the 2D points of the array used at construction time.
      void Points2D (TColgp_Array1OfPnt2d& theArrayOfPnt2d) ;




  DEFINE_STANDARD_RTTI(Select3D_SensitivePoly)

protected:

  
  //! Constructs a sensitive face object defined by the
  //! owner OwnerId, the array of points ThePoints, and
  //! the sensitivity type Sensitivity.
  //! The array of points is the outer polygon of the geometric face.
  Standard_EXPORT Select3D_SensitivePoly(const Handle(SelectBasics_EntityOwner)& OwnerId, const TColgp_Array1OfPnt& ThePoints);
  
  //! Constructs a sensitive face object defined by the
  //! owner OwnerId, the array of points ThePoints, and
  //! the sensitivity type Sensitivity.
  //! The array of points is the outer polygon of the geometric face.
  Standard_EXPORT Select3D_SensitivePoly(const Handle(SelectBasics_EntityOwner)& OwnerId, const Handle(TColgp_HArray1OfPnt)& ThePoints);
  
  //! Constructs the sensitive circle object defined by the
  //! owner OwnerId, the circle Circle, the Boolean
  //! FilledCircle and the number of points NbOfPoints.
  Standard_EXPORT Select3D_SensitivePoly(const Handle(SelectBasics_EntityOwner)& OwnerId, const Standard_Integer NbOfPoints = 6);

  Select3D_Box2d mybox2d;
  Select3D_PointData mypolyg;


private: 




};


#include <Select3D_SensitivePoly.lxx>





#endif // _Select3D_SensitivePoly_HeaderFile
