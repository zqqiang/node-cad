// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _MeshVS_SensitivePolyhedron_HeaderFile
#define _MeshVS_SensitivePolyhedron_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_MeshVS_SensitivePolyhedron.hxx>

#include <Handle_TColgp_HArray1OfPnt.hxx>
#include <Handle_TColgp_HArray1OfPnt2d.hxx>
#include <Handle_MeshVS_HArray1OfSequenceOfInteger.hxx>
#include <gp_XY.hxx>
#include <Select3D_SensitiveEntity.hxx>
#include <Handle_SelectBasics_EntityOwner.hxx>
#include <Handle_Select3D_Projector.hxx>
#include <Handle_Select3D_SensitiveEntity.hxx>
#include <Standard_Boolean.hxx>
#include <SelectBasics_PickArgs.hxx>
#include <Standard_Real.hxx>
class TColgp_HArray1OfPnt;
class TColgp_HArray1OfPnt2d;
class MeshVS_HArray1OfSequenceOfInteger;
class SelectBasics_EntityOwner;
class TColgp_Array1OfPnt;
class Select3D_Projector;
class Select3D_SensitiveEntity;
class TopLoc_Location;
class TColgp_Array1OfPnt2d;
class Bnd_Box2d;
class TColStd_SequenceOfInteger;
class gp_Lin;
class SelectBasics_ListOfBox2d;



class MeshVS_SensitivePolyhedron : public Select3D_SensitiveEntity
{

public:

  
  Standard_EXPORT MeshVS_SensitivePolyhedron(const Handle(SelectBasics_EntityOwner)& Owner, const TColgp_Array1OfPnt& Nodes, const Handle(MeshVS_HArray1OfSequenceOfInteger)& Topo);
  
  Standard_EXPORT virtual   void Project (const Handle(Select3D_Projector)& aProjector) ;
  
  Standard_EXPORT virtual   Handle(Select3D_SensitiveEntity) GetConnected (const TopLoc_Location& aLocation) ;
  
  Standard_EXPORT virtual   Standard_Boolean Matches (const SelectBasics_PickArgs& thePickArgs, Standard_Real& theMatchDMin, Standard_Real& theMatchDepth) ;
  
  Standard_EXPORT virtual   Standard_Boolean Matches (const Standard_Real XMin, const Standard_Real YMin, const Standard_Real XMax, const Standard_Real YMax, const Standard_Real aTol) ;
  
  Standard_EXPORT virtual   Standard_Boolean Matches (const TColgp_Array1OfPnt2d& Polyline, const Bnd_Box2d& aBox, const Standard_Real aTol) ;
  
  Standard_EXPORT virtual   Standard_Real ComputeDepth (const gp_Lin& EyeLine)  const;
  
  Standard_EXPORT virtual   void Areas (SelectBasics_ListOfBox2d& aResult) ;




  DEFINE_STANDARD_RTTI(MeshVS_SensitivePolyhedron)

protected:

  
  Standard_EXPORT   void GetBox2d (Bnd_Box2d& aBox)  const;
  
  Standard_EXPORT   Standard_Real FindIntersection (const TColStd_SequenceOfInteger& NodesIndices, const gp_Lin& EyeLine)  const;



private: 


  Handle(TColgp_HArray1OfPnt) myNodes;
  Handle(TColgp_HArray1OfPnt2d) myNodes2d;
  Handle(MeshVS_HArray1OfSequenceOfInteger) myTopo;
  gp_XY myCenter;


};







#endif // _MeshVS_SensitivePolyhedron_HeaderFile
